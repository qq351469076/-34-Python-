"""
单一职责原则，简单来说就是保证设计类、接口、方法时做到功能单一，权责明确。

个人理解:
    比如修改用户密码,  通常传一个账号的所有信息, 达到了修改密码的目的
    但是, 修改用户密码的同时, 其实有可能也把用户其他信息修改了
    设计思想是, 高内聚, 解耦合, 应将接口拆分为各个细分的接口
    比如update_user_pass
        update_user_address
        update_user_ses
    这里很明显，我们看到分拆后的接口职责更加单一，权责更加清楚，日后维护开发也更加便捷。

单一职责原则，指的是一个类或者模块有且只有一个改变的原因。
如果模块或类承担的职责过多，就等于这些职责耦合在一起，这样一个模块的变快可能会削弱或抑制其它模块的能力，
这样的耦合是十分脆弱地。所以应该尽量保持单一职责原则，此原则的核心就是解耦和增强内聚性。

单一职责原则总结
    可以降低类的复杂性, 提高代码复用性, 可维护性
"""